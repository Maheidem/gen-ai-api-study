[tool:pytest]
# Pytest configuration for local-llm-sdk

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    -m "not live_llm"

# Coverage options (if pytest-cov is installed)
# addopts =
#     -v
#     --tb=short
#     --strict-markers
#     --strict-config
#     --color=yes
#     --durations=10
#     --cov=local_llm_sdk
#     --cov-report=term-missing
#     --cov-report=html:htmlcov
#     --cov-fail-under=80

# Markers for test categorization
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (may require external services)
    slow: Slow running tests
    api: Tests that make real API calls (require LM Studio)
    lm_studio: Tests that require running LM Studio instance
    tool_calling: Tests that require tool-calling capable models
    thinking: Tests that require thinking/reasoning models
    live_llm: Tests requiring actual LLM server (behavioral testing, skipped by default)
    behavioral: Tests validating LLM behavior patterns (property-based assertions)
    golden: Tests using golden dataset for regression detection
    notebook: Notebook validation tests (check API usage, no LLM needed)

# Minimum Python version
minversion = 6.0

# Filtering and warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pydantic.*

# Timeout for tests (if pytest-timeout is installed)
# timeout = 30

# Logging during tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test collection
norecursedirs =
    .git
    .tox
    .env
    venv
    env
    __pycache__
    *.egg-info
    build
    dist
    .pytest_cache